const sqlite3 = require('sqlite3').verbose();

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const db = new sqlite3.Database('database.sqlite', (err) => {
    if (err) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err.message);
        return;
    }
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ SQLite –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–±—ã—Ç–∏—è—Ö
db.all('SELECT id, title, image_url FROM events WHERE image_url IS NOT NULL', [], (err, rows) => {
    if (err) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', err.message);
        return;
    }
    
    console.log('\nüì∑ –°–æ–±—ã—Ç–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:');
    rows.forEach((row) => {
        console.log(`ID: ${row.id}`);
        console.log(`–ù–∞–∑–≤–∞–Ω–∏–µ: ${row.title}`);
        console.log(`URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${row.image_url}`);
        console.log('---');
    });
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    db.close((err) => {
        if (err) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err.message);
        } else {
            console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
        }
    });
});