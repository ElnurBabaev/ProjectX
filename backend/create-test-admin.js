const sqlite3 = require('sqlite3').verbose();
const bcrypt = require('bcryptjs');

const db = new sqlite3.Database('./database.sqlite', (err) => {
  if (err) {
    console.error('–û—à–∏–±–∫–∞:', err);
    return;
  }
  
  console.log('üîß –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ admin
  db.get('SELECT id FROM users WHERE login = "admin"', (err, row) => {
    if (err) {
      console.error('–û—à–∏–±–∫–∞:', err);
      db.close();
      return;
    }
    
    if (row) {
      console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä admin —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –Ω–∞ 'admin' –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      const hashedPassword = bcrypt.hashSync('admin', 12);
      db.run('UPDATE users SET password = ? WHERE login = "admin"', [hashedPassword], (err) => {
        if (err) {
          console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è:', err);
        } else {
          console.log('üîë –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ "admin"');
        }
        db.close();
      });
    } else {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
      const hashedPassword = bcrypt.hashSync('admin', 12);
      
      db.run(`
        INSERT INTO users (login, password, first_name, last_name, role, class_grade, class_letter)
        VALUES (?, ?, ?, ?, ?, ?, ?)
      `, ['admin', hashedPassword, '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', '–°–∏—Å—Ç–µ–º—ã', 'admin', 11, '–ê'], (err) => {
        if (err) {
          console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', err);
        } else {
          console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
          console.log('üìù –õ–æ–≥–∏–Ω: admin');
          console.log('üîë –ü–∞—Ä–æ–ª—å: admin');
        }
        db.close();
      });
    }
  });
});