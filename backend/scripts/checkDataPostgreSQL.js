require('dotenv').config();
const { Event, Product, User } = require('../models');

async function checkData() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ...');
  console.log('============================\n');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await User.getAllUsers();
    console.log('üë• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:');
    if (users.length === 0) {
      console.log('   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    } else {
      users.forEach(user => {
  console.log(`   - ${user.firstName} ${user.lastName} (login: ${user.login}) - ${user.role} - ${user.personalPoints} –±–∞–ª–ª–æ–≤`);
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    const events = await Event.getAllEvents();
    console.log('\nüìÖ –ú–ï–†–û–ü–†–ò–Ø–¢–ò–Ø:');
    if (events.length === 0) {
      console.log('   –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    } else {
      events.forEach(event => {
        console.log(`   - ${event.title} (${event.date}) - ${event.pointsReward} –±–∞–ª–ª–æ–≤`);
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã
    const products = await Product.getAllProducts();
    console.log('\nüõçÔ∏è –¢–û–í–ê–†–´:');
    if (products.length === 0) {
      console.log('   –¢–æ–≤–∞—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    } else {
      products.forEach(product => {
        console.log(`   - ${product.name} (${product.price} –±–∞–ª–ª–æ–≤, –æ—Å—Ç–∞–ª–æ—Å—å: ${product.stock})`);
      });
    }

    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  checkData()
    .then(() => {
      process.exit(0);
    })
    .catch(err => {
      console.error('‚ùå –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', err);
      process.exit(1);
    });
}

module.exports = checkData;