// –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
async function testCreateAchievement() {
    try {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è...');
        
        // –°–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
        const loginResponse = await fetch('http://localhost:5000/api/auth/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                username: 'admin',
                password: 'admin123'
            })
        });

        const loginData = await loginResponse.json();
        const token = loginData.token;
        console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –ø–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω');

        // –¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
        const achievementResponse = await fetch('http://localhost:5000/api/achievements', {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                title: '–¢–µ—Å—Ç–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ',
                description: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
                icon: 'üèÜ',
                type: 'excellence',
                points: 50,
                badge_color: '#FFD700'
            })
        });

        if (!achievementResponse.ok) {
            const errorData = await achievementResponse.text();
            throw new Error(`HTTP ${achievementResponse.status}: ${errorData}`);
        }

        const achievementData = await achievementResponse.json();
        console.log('‚úÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        console.log('üìã –î–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:', achievementData);

        // –ü–æ–ª—É—á–∏–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
        const allAchievementsResponse = await fetch('http://localhost:5000/api/achievements', {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });

        const allAchievementsData = await allAchievementsResponse.json();
        console.log('üìä –í—Å–µ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:', allAchievementsData.achievements.length);
        console.log('üîç –ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:', allAchievementsData.achievements[0]);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

testCreateAchievement();
}
}

testCreateAchievement();