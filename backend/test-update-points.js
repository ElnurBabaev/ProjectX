const axios = require('axios');

async function testUpdatePoints() {
    try {
        // –°–Ω–∞—á–∞–ª–∞ –ª–æ–≥–∏–Ω–∏–º—Å—è —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω
        console.log('üîê –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ admin...');
        const loginResponse = await axios.post('http://localhost:5000/api/auth/login', {
            login: 'admin',
            password: 'admin123'
        });
        
        const token = loginResponse.data.token;
        console.log('‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω');
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤
        console.log('üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=1...');
        const updateResponse = await axios.post('http://localhost:5000/api/admin/users/1/update-points', 
            { points: 50 }, 
            { headers: { 'Authorization': `Bearer ${token}` }}
        );
        
        console.log('üì§ –û—Ç–≤–µ—Ç API –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤:');
        console.log(JSON.stringify(updateResponse.data, null, 2));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–∞–ª–ª—ã –æ–±–Ω–æ–≤–∏–ª–∏—Å—å
        console.log('üë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
        const usersResponse = await axios.get('http://localhost:5000/api/admin/users', {
            headers: { 'Authorization': `Bearer ${token}` }
        });
        
        const admin = usersResponse.data.users.find(u => u.id === 1);
        console.log('üëë Admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:');
        console.log(`  - ID: ${admin.id}`);
        console.log(`  - –õ–æ–≥–∏–Ω: ${admin.login}`);
        console.log(`  - –ë–∞–ª–ª—ã: ${admin.points}`);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.response ? error.response.data : error.message);
    }
}

testUpdatePoints();